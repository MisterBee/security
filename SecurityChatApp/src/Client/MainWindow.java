
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import java.awt.event.KeyEvent;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

/**
 *
 * @author rmazzolini
 */
public class MainWindow extends javax.swing.JFrame implements Runnable
{
    Thread t;
    
    Socket connectionSocket = null;
    ServerSocket welcomeSocket = null;
    Socket clientSocket = null;
    PrintWriter outToServer;
    
    String userName = "Alice";
    String serverIp = "localhost";
    int port = 6889;
    /**
     * Creates new form MainWindow
     */
    public MainWindow() 
    {
        initComponents();
    }
    //this is an infinite loop that tries to get connections - probably need to make this another thread
    @Override
    public void run()
    {
        try
        {
            //create the welcome socket
            welcomeSocket = new ServerSocket(0);
            
            boolean inloop = false;
            
            while (true)
            {
                if(!inloop)
                {
                    //consoleMessage("Welcome to the server!\n");
                    inloop = true;
                }
                
                try
                {
                   clientSocket = welcomeSocket.accept();
                   //jTextArea1.append("User Logging in\n");
                   RecieveThread st =  new RecieveThread(clientSocket, this);
                }
                catch(Exception e)
                {
                    consoleMessage("User Failed Logging in");
                }
            }
         }
         catch(Exception e)
         {
             consoleMessage("Server setup failed " + e.getMessage());
         }
         
    }
    
    public void login()
    {
        
        try
        {
            clientSocket = new Socket(serverIp, port);
            RecieveThread st =  new RecieveThread(clientSocket, this);
            
            try
            {
                outToServer = new PrintWriter(clientSocket.getOutputStream(), true);
                //System.out.println("Alice");
                //System.out.println(clientSocket.getLocalAddress().getHostName());
                
                String generateMasterKey = generateMasterKey();
                
                //System.out.println(ssThread.welcomeSocket.getLocalPort() + " /");
                outToServer.println("/UserName " + userName + " " +clientSocket.getLocalAddress().getHostAddress() +" "+ welcomeSocket.getLocalPort() + " " + generateMasterKey);
                //outToServer.println("/UserName " + "Alice" + " " +clientSocket.getLocalAddress().getHostAddress() +" "+ ssThread.welcomeSocket.getLocalPort());
    //            sleeper.t.start();
    //            outToServer.println("/UserName " + userName + " " +clientSocket.getLocalAddress().getHostAddress() +" "+ ssThread.welcomeSocket.getLocalPort());
    //            outToServer.println(loginString);
                
                t = new Thread(this);
                t.start();
            }
            catch(Exception e)
            {
                consoleMessage("Output failed " + e.getMessage());
            }
            
        }
        catch(Exception e)
        {
            consoleMessage("Failed to connect to server");
        }
        
    }
    public String generateMasterKey()
    {
        return "password";
    }
    public void consoleMessage(String input)
    {
        jTextArea1.append( input + "\n");
    }
    public void serverMessage(String text)
    {
        if(outToServer!=null)
        {
            outToServer.println(text);
        }
        else
        {
            consoleMessage("Not connected to server");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("Bonk here");
        jTextArea2.setToolTipText("Type here to chat to your paramour");
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DropText(evt);
            }
        });
        jTextArea2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Entered(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea2);
        jTextArea2.getAccessibleContext().setAccessibleName("Input");

        jMenu1.setText("File");

        jMenuItem1.setText("Log into Server");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DropText(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DropText
        // TODO add your handling code here:
        jTextArea2.setText("");
    }//GEN-LAST:event_DropText
    
    private void Entered(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Entered
        // TODO add your handling code here:
        int keyCode = evt.getKeyCode();
        if(keyCode==KeyEvent.VK_ENTER)
        {
            String input = jTextArea2.getText().trim();
            jTextArea1.append(userName+": " + input + "\n");
            try
            {
                serverMessage(input);
            }
            catch(Exception e)
            {
                jTextArea1.append("Couldn't connect to server message not sent.\n");
            }
            jTextArea2.setText("");
        }
    }//GEN-LAST:event_Entered

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Login s = new Login(this);
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
